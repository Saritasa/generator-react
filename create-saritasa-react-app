#!/usr/bin/env node
const path = require('path');
const cp = require('child_process');

const list = require('cli-list');

const deps = [
  'prop-types',
  'reselect',
  'redux',
  'immutable',
  'redux-immutable',
  'redux-saga',
  'react-redux',
  'react-router',
  'redux-logger',
  'ric',
  'ajv',
  'axios',
  '@saritasa/react-form',
  'recompose@0.27',
  'classnames',
  'react-app-core',
  'react-router',
  'react-router-dom',
  'get-e2e-test-classname',
].join(' ');

const devDeps = [
  '@saritasa/generator-react',
  'yo',
  '@storybook/react',
  '@storybook/addon-actions',
  '@storybook/addon-knobs',
  '@storybook/addon-links',
  '@storybook/addon-actions',
  'mocha',
  'enzyme',
  'enzyme-adapter-react-16',
  'chai',
  'flow-bin',
  'husky',
  'lint-staged',
  'prettier',
  'nyc',
  'react-app-rewired',
].join(' ');

const filesToRemove = [
  'src/App*',
  'src/index.js',
];

function checkNodejsVerion() {
  const { node } = process.versions;
  if (Number(node.split('.')[0]) !== 8) {
    throw new Error(`Use nodejs v8 instead of ${node}`);
  }
}

function checkNpx() {
  try {
    cp.execSync('npx --version');
  } catch (error) {
    throw new Error('Install npx please (you may use npm v5.7+ for it).');
  }
}

function checkArguments({ name }) {
  if (!(/^[a-zA-Z][-a-zA-Z]*$/.test(name))) {
    throw new Error(`name should includes only latin letters and dashes. You passed "${name}"`);
  }
}

function install({ name }) {
  cp.execSync(`npx create-react-app ${name} --use-npm --scripts-version @saritasa/react-scripts`);
  cp.execSync(`npm install --save ${deps}`, { cwd: path.join(process.cwd(), name) });
  cp.execSync(`npm install --save-dev ${devDeps}`, { cwd: path.join(process.cwd(), name) });
  cp.execSync('npx flow init', { cwd: path.join(process.cwd(), name) });
  cp.execSync('npx flow-ignore-dev-deps', { cwd: path.join(process.cwd(), name) });
  cp.execSync(`npx rimraf ${filesToRemove.join(' ')}`, { cwd: path.join(process.cwd(), name) });
  cp.execSync(`npx yo @saritasa/react ${name}`, { cwd: path.join(process.cwd(), name) });
  console.log('Done.');
}

function run() {
  checkNodejsVerion();
  checkNpx();
  const [name] = list(process.argv.slice(2)).join(',').split(',');
  checkArguments({ name });
  install({ name });
}

run();
